import ftn.sbzn.PoEhelperbackend.model.Tag;
import ftn.sbzn.PoEhelperbackend.model.Build;
import java.util.Set;

rule "Collect all tags"
salience 1
//agenda-group "build"
when
   $tags: Set()
        from accumulate( Tag( $n: name),
        collectSet( $n )
   );
   $b: Build()
then
    $b.setTags($tags);
    update($b);
    System.out.println( "dodati tagovi" );
    System.out.println($b.getTags());
end

rule "Bleed damage type"
salience 11
//agenda-group "build"
when
    not (Tag( name == "Fire" ))
    not (Tag( name == "Cold" ))
    not (Tag( name == "Lightning" ))
    not (Tag( name == "Chaos"))
    Tag(name == "Physical")
    Tag(name == "Duration")
    $b: Build()
then
    $b.setDamageType("Bleed");
    update($b);
    System.out.println($b.getDamageType());
end

rule "Poison damage type"
salience 11
//agenda-group "build"
when
    Tag( name == "Chaos")
    Tag( name == "Duration")
    $b: Build()
then
    $b.setDamageType("Poison");
    update($b);
    System.out.println($b.getDamageType());
end

rule "elemental damage type"
salience 12
when
    Tag( name == "Fire")
    Tag( name == "Cold")
    Tag( name == "Lightning")
    $b: Build()
then
    $b.setDamageType("Elemental");
    update($b);
    System.out.println("Damage type: elemental");
end

rule "chaos damage type"
salience 12
when
    Tag( name == "Chaos")
    $b: Build()
then
    $b.setDamageType("Chaos");
    update($b);
    System.out.println("Damage type: chaos");
end

rule "Fire damage type"
salience 13
//agenda-group "build"
when
    Tag(name == "Fire")
    $b: Build()
then
    $b.setDamageType("Fire");
    update($b);
    System.out.println($b.getDamageType());
end


rule "Cold damage type"
salience 14
//agenda-group "build"
when
    Tag( name == "Cold")
    $b: Build()
then
    $b.setDamageType("Cold");
    update($b);
    System.out.println($b.getDamageType());
end


rule "Lightning damage type"
salience 15
//agenda-group "build"
when
    Tag( name == "Lightning")
    $b: Build()
then
    $b.setDamageType("Lightning");
    update($b);
    System.out.println($b.getDamageType());
end

rule "Physical damage type"
salience 20
//agenda-group "build"
when
    Tag( name == "Physical")
    $b: Build()
then
    $b.setDamageType("Physical");
    update($b);
    System.out.println($b.getDamageType());
end


rule "Ailment tag"
salience 10
//agenda-group "build"
when
    Tag(name == "Physical" || name == "Cold" || name == "Fire" || name == "Chaos")
    Tag(name == "Duration")
then
    insert(new Tag("Ailment"));
end


